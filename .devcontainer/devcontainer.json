// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/ubuntu
{
	"name": "Ubuntu",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/base:jammy",

	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers-contrib/features/elm-asdf:2": {},
		"ghcr.io/devcontainers/features/node:1": {}
	},

	"customizations": {
		"vscode": {
			"extensions": [
				"Elmtooling.elm-ls-vscode",
				"github.vscode-github-actions",
				"GitHub.copilot"
			],
			"settings": {
				"[elm]": {
					"editor.formatOnSave": true
				}
			}
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "npm install",

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"

	// Keeping the elm dependency cache mounted in a volume is both a small performance benefit
	// when having rebuilt your container. It also solves a problem with the Elm Language Server.
	// The Elm Language Server uses the dependency cache stored at ~/.elm.
	// However, the elm compiler uses elm-stuff in the mounted directory which keeps timestamps
	// telling the elm compiler whether elm.json changed since it last downloaded dependencies.
	// This data is persisted, but without a volume the ~/.elm dependency cache itself is not
	// persisted, resulting in a corruption of that relationship.
	// The Elm Language Server expects the elm compiler to keep ~/.elm up to date, but because
	// of this failure it will crash continuously when ~/.elm does not store the elm code for
	// the dependencies. This will usually occur every time the container has been rebuilt
	// and is manually fixed by deleting the elm-stuff directory which forces the compiler to
	// redownload dependencies.
	// Adding this volume will preserve the elm cache between rebuilds though, fixing this issue
	"mounts": [
		"source=vscode-devcontainer-elm-dependency-cache,target=/home/node/.elm,type=volume"
	]
}
